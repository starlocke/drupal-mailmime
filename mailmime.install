<?php

/**
 * @file
 * Ensures certain PEAR modules are available by downloading them if necessary.
 */

/**
 * Implements hook_requirements().
 *
 * Creates a PEAR directory to hold downloaded PEAR modules.
 *
 * Adds the PEAR directory to the front of the include path.
 *
 * Ensures the availability of requisite PEAR module files by downloading
 * them to the local PEAR directory if necessary.
 *
 * Returns an appropriate error message if any of the above failed.
 */
function mailmime_requirements($phase) {
  $failures = array();
  $pear = drupal_realpath(file_build_uri('PEAR'));
  $t = get_t();
  if (!file_prepare_directory($pear,
      FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS)
  ) {
    $failures[] = $t(
      'Could not create directory %pear', array('%pear' => $pear)
    );
  }
  else {
    $repository = 'http://svn.php.net/repository/pear/';
    $packages = array(
      'Mail_mime' => array(
        'local_path' => 'Mail/',
        'remote_path' => 'packages/Mail_Mime/trunk/',
        'files' => array(
          'mime.php',
          'mimeDecode.php',
          'mimePart.php',
          'package.xml',
          'xmail.dtd',
          'xmail.xsl',
        ),
      ),
      'PEAR' => array(
        'local_path' => '',
        'remote_path' => 'pear-core/trunk/',
        'files' => array(
          'PEAR.php',
        ),
      ),
    );
    set_include_path(
      implode(PATH_SEPARATOR,
        array_unique(
          array_merge(
            array($pear),
            explode(PATH_SEPARATOR, get_include_path())
          )
        )
      )
    );
    foreach ($packages as $name => $package) {
      $local = $package['local_path'];
      $packagedir = "$pear/$local";
      if (!file_prepare_directory($packagedir,
          FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS)) {
        $failures[] = $t(
          'Could not create directory %local',
          array('%local' => $packagedir)
        );
        continue;
      }
      $remote = $package['remote_path'];
      foreach ($package['files'] as $file) {
        $include = "$local$file";
        if ($fd = @fopen($include, 'r', TRUE)) {
          fclose($fd);
          continue;
        }
        $url = "$repository$remote$file";
        $filename = "$pear/$include";
        if ( !($response = drupal_http_request($url))
          || !isset($response->data)
        ) {
          $failures[] = $t(
            'Could not fetch %url.',
            array('url' => $url)
          );
        }
        elseif (!($count = strlen($response->data))) {
          $failures[] = $t(
            '%url returned zero-length file',
            array('%url' => $url)
          );
        }
        elseif ($count != file_put_contents($filename, $response->data)) {
          $failures[] = $t(
            'Could not write %count bytes to %filename.',
            array('%count' => $count, '%filename' => $filename)
          );
        }
      }
    }
  }
  if (empty($failures)) {
    return $failures;
  }
  return array(
    'MailMIME' => array(
      'title' => $t('Automatic PEAR Mail_Mime package installation'),
      'description' => implode('<br />', $failures),
      'severity' => REQUIREMENT_ERROR,
    ),
  );
}